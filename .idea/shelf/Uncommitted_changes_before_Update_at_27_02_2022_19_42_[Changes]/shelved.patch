Index: Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n* Desenvolvido por: Grupo 4 \"Os Grandes\"\r\n* Versão: 1.0\r\n* Ultima Modificação: 24-02-2022 15:15\r\n* */\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.util.Formatter;\r\nimport java.util.Scanner;\r\n\r\nimport javax.swing.*;\r\n\r\npublic class Main {\r\n  public static void main(String[] args) throws FileNotFoundException {\r\n\r\n    //Constantes\r\n    final int TAMANHO = 50;\r\n\r\n    //Variaveis\r\n    int nElems = 0;\r\n\r\n    String option;\r\n\r\n    boolean exit = false;\r\n\r\n    //Vetores\r\n    int[] numeros = new int[TAMANHO];\r\n    int[] algNotas = new int[TAMANHO];\r\n    int[] javaNotas = new int[TAMANHO];\r\n    int[] vbNotas = new int[TAMANHO];\r\n\r\n    String[] turmas = new String[TAMANHO];\r\n    String[] nomes = new String[TAMANHO];\r\n\r\n    do {\r\n\r\n      option = menu();\r\n\r\n      switch (option){\r\n        case \"Inserir Aluno\":\r\n          if(nElems < TAMANHO){\r\n            nElems = inserirAluno(turmas, nomes, numeros, algNotas, javaNotas, vbNotas, nElems);\r\n          }else {\r\n            JOptionPane.showMessageDialog(null, \"Numero máximo de alunos atingido!\", \"Falha ao inserir Aluno\", JOptionPane.ERROR_MESSAGE);\r\n          }\r\n          break;\r\n\r\n        case \"Atualizar Informação\":\r\n          System.out.println(\"ATUALIZAR\");\r\n          //TODO: atualizarAluno()\r\n          break;\r\n\r\n        case \"Ver Alunos\":\r\n          if (nElems > 0){\r\n            verAlunos(turmas, numeros, nomes, algNotas, javaNotas, vbNotas, nElems);\r\n          }else {\r\n            JOptionPane.showMessageDialog(null, \"Não existem alunos inseridos!\", \"Sem alunos!\", JOptionPane.WARNING_MESSAGE);\r\n          }\r\n          break;\r\n\r\n        case \"Carregar Alunos\":\r\n          if(nElems < nomes.length){\r\n            nElems = importarDados(turmas, numeros, nomes, algNotas, javaNotas, vbNotas, nElems);\r\n          }else {\r\n            JOptionPane.showMessageDialog(null, \"Não existem dados\");\r\n          }\r\n            break;\r\n\r\n        case \"Exportar Alunos\":\r\n          exportarDados(turmas, numeros, nomes, algNotas, javaNotas, vbNotas, nElems);\r\n          break;\r\n\r\n        default:\r\n          exit = exitMenu();\r\n      }\r\n    } while (!exit);\r\n  }\r\n\r\n  /*Funcionalidades*/\r\n\r\n  private static int inserirAluno(String[] turmas, String[] nomes, int[] numeros, int[] algNotas, int[] javaNotas, int[] vbNotas, int nElems) {\r\n\r\n    do {\r\n      nomes[nElems] = JOptionPane.showInputDialog(null, \"Insira o nome do(a) aluno(a):\", \"Inserir Aluno\",  JOptionPane.PLAIN_MESSAGE);\r\n\r\n      if (nomes[nElems].length() == 0){\r\n        JOptionPane.showMessageDialog(null, \"Por favor preencha o campo do nome!\", \"Nome inválido!\", JOptionPane.WARNING_MESSAGE);\r\n      }\r\n\r\n    }while (nomes[nElems] == null || nomes[nElems].length() == 0);\r\n\r\n    do{\r\n\r\n      turmas[nElems] = JOptionPane.showInputDialog(null, \"Insira a turma do aluno(a) \"+ nomes[nElems] +\":\", \"Inserir Aluno\", JOptionPane.PLAIN_MESSAGE).toUpperCase();\r\n\r\n      if (turmas[nElems].length() != 1){\r\n        JOptionPane.showMessageDialog(null, \"A turma só pode ser constituida por uma letra!\", \"Turma inválida!\", JOptionPane.WARNING_MESSAGE);\r\n      }\r\n\r\n    }while (turmas[nElems].length() != 1);\r\n\r\n    numeros[nElems] = checkNumber(JOptionPane.showInputDialog(null, \"Insira o numero do(a) aluno(a) \" + nomes[nElems] + \":\", \"Inserir Aluno\", JOptionPane.PLAIN_MESSAGE), nomes[nElems]);\r\n    algNotas[nElems] = checkNota(JOptionPane.showInputDialog(null, \"Insira a nota de Algoritmia do(a) aluno(a) \" + nomes[nElems] + \":\", \"Inserir Aluno\", JOptionPane.PLAIN_MESSAGE), nomes[nElems], \"Algoritmia\");\r\n    javaNotas[nElems] = checkNota(JOptionPane.showInputDialog(null, \"Insira a nota de Java do(a) aluno(a) \" + nomes[nElems] + \":\", \"Inserir Aluno\",JOptionPane.PLAIN_MESSAGE), nomes[nElems], \"Java\");\r\n    vbNotas[nElems] = checkNota(JOptionPane.showInputDialog(null, \"Insira a nota de Visual Basic do(a) aluno(a) \" + nomes[nElems] + \":\", \"Inserir Aluno\", JOptionPane.PLAIN_MESSAGE), nomes[nElems], \"Visual Basic\");\r\n\r\n    nElems++;\r\n\r\n    JOptionPane.showMessageDialog(null, \"Aluno(a) inserido(a) com sucesso!\", \"Sucesso!\", JOptionPane.INFORMATION_MESSAGE);\r\n\r\n    return nElems;\r\n\r\n  }\r\n\r\n  private static void verAlunos(String[] turmas, int[] numeros, String[] nomes, int[] algNotas, int[] javaNotas, int[] vbNotas, int nElems) {\r\n\r\n    String[] options;\r\n\r\n    int option;\r\n\r\n    options = new String[] {\"Ordenar Alunos\", \"Voltar\"};\r\n    option = JOptionPane.showOptionDialog(null, tabelaAlunos(turmas, numeros, nomes, algNotas, javaNotas, vbNotas, nElems), \"Ver Alunos\", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[1]);\r\n\r\n    if(option == 0){\r\n      ordenarClassificacao(turmas, numeros, nomes, algNotas, javaNotas, vbNotas, nElems);\r\n    }\r\n\r\n  }\r\n\r\n  private static void ordenarClassificacao(String[] turmas, int[] numeros, String[] nomes, int[] algNotas, int[] javaNotas, int[] vbNotas, int nElems) {\r\n\r\n    int auxNumero;\r\n    int auxAlgNota;\r\n    int auxJavaNota;\r\n    int auxVbNota;\r\n\r\n    String auxNomes;\r\n    String auxTurmas;\r\n\r\n    for (int i = 0; i < nElems; i++) {\r\n      for (int j = i + 1; j < nElems; j++) {\r\n        if(turmas[j].compareToIgnoreCase(turmas[i]) < 0){\r\n\r\n          auxNomes = nomes[i];\r\n          nomes[i] = nomes[j];\r\n          nomes[j] = auxNomes;\r\n\r\n          auxTurmas = turmas[i];\r\n          turmas[i] = turmas[j];\r\n          turmas[j] = auxTurmas;\r\n\r\n          auxNumero = numeros[i];\r\n          numeros[i] = numeros[j];\r\n          numeros[j] = auxNumero;\r\n\r\n          auxAlgNota = algNotas[i];\r\n          algNotas[i] = algNotas[j];\r\n          algNotas[j] = auxAlgNota;\r\n\r\n          auxJavaNota = javaNotas[i];\r\n          javaNotas[i] = javaNotas[j];\r\n          javaNotas[j] = auxJavaNota;\r\n\r\n          auxVbNota = vbNotas[i];\r\n          vbNotas[i] = vbNotas[j];\r\n          vbNotas[j] = auxVbNota;\r\n        }\r\n\r\n        if (numeros[i] > numeros[j] && turmas[j].compareToIgnoreCase(turmas[i]) == 0){\r\n\r\n          auxNomes = nomes[i];\r\n          nomes[i] = nomes[j];\r\n          nomes[j] = auxNomes;\r\n\r\n          auxTurmas = turmas[i];\r\n          turmas[i] = turmas[j];\r\n          turmas[j] = auxTurmas;\r\n\r\n          auxNumero = numeros[i];\r\n          numeros[i] = numeros[j];\r\n          numeros[j] = auxNumero;\r\n\r\n          auxAlgNota = algNotas[i];\r\n          algNotas[i] = algNotas[j];\r\n          algNotas[j] = auxAlgNota;\r\n\r\n          auxJavaNota = javaNotas[i];\r\n          javaNotas[i] = javaNotas[j];\r\n          javaNotas[j] = auxJavaNota;\r\n\r\n          auxVbNota = vbNotas[i];\r\n          vbNotas[i] = vbNotas[j];\r\n          vbNotas[j] = auxVbNota;\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    verAlunos(turmas, numeros, nomes, algNotas, javaNotas, vbNotas, nElems);\r\n\r\n  }\r\n\r\n  private static int importarDados(String[] turmas, int[] numeros, String[] nomes, int[] algNotas, int[] javaNotas, int[] vbNotas, int nElems) throws FileNotFoundException {\r\n    int cop = nElems;\r\n\r\n    Scanner fichFunc = new Scanner(new File(\"DadosAlunos.txt\"));\r\n\r\n    while(fichFunc.hasNextLine() && nElems < nomes.length){\r\n\r\n      String linha = fichFunc.nextLine();\r\n      String[] vetLinha = linha.split(\":\");\r\n\r\n      if(pesquisar(numeros, nElems, Integer.parseInt(vetLinha[1])) == -1){\r\n\r\n        turmas[nElems] = vetLinha[0];\r\n        numeros[nElems] = Integer.parseInt(vetLinha[1].trim());\r\n        nomes[nElems] = vetLinha[2];\r\n\r\n        algNotas[nElems] = Integer.parseInt(vetLinha[3].trim());\r\n        javaNotas[nElems] = Integer.parseInt(vetLinha[4].trim());\r\n        vbNotas[nElems] = Integer.parseInt(vetLinha[5].trim());\r\n\r\n        nElems++;\r\n\r\n      }\r\n    }\r\n    fichFunc.close();\r\n    JOptionPane.showMessageDialog(null, (nElems-cop) +  \" Dado(s) carregados(s)\");\r\n    return nElems;\r\n  }\r\n\r\n  private static void exportarDados(String[] turmas, int[] numeros, String[] nomes, int[] algNotas, int[] javaNotas, int[] vbNotas, int nElems) throws FileNotFoundException {\r\n    Formatter fichFunc = new Formatter(\"DadosAlunos.txt\");\r\n    for (int x = 0; x < nElems; x++) {\r\n      if(x == 0) {\r\n        fichFunc.format(\"%s:%d:%s:%d:%d:%d\", turmas[x], numeros[x], nomes[x], algNotas[x], javaNotas[x], vbNotas[x]);\r\n      }else{\r\n        fichFunc.format(\"\\n%s:%d:%s:%d:%d:%d\", turmas[x], numeros[x], nomes[x], algNotas[x], javaNotas[x], vbNotas[x]);\r\n      }\r\n    }\r\n    fichFunc.close();\r\n    JOptionPane.showMessageDialog(null, nElems +  \" Dado(s) exportado(s)\");\r\n  }\r\n\r\n  /* Menus e outras necessidades*/\r\n  public static String menu() {\r\n\r\n    String[] options = {\"Inserir Aluno\", \"Atualizar Informação\", \"Ver Alunos\", \"Carregar Alunos\", \"Exportar Alunos\", \"Sair\"};\r\n\r\n    String selectedOption;\r\n\r\n    selectedOption = (String) JOptionPane.showInputDialog(null, \"Selecione o que pretende fazer:\\n\\n\", \"Menu\", JOptionPane.PLAIN_MESSAGE, null, options, options[0]);\r\n\r\n    return selectedOption;\r\n\r\n\r\n  }\r\n\r\n  private static boolean exitMenu() {\r\n\r\n    String[] options = {\"Sim\", \"Não\"};\r\n\r\n    JLabel lbl = new JLabel(\"Quer mesmo sair?\");\r\n\r\n    JPanel panel = new JPanel();\r\n    panel.add(lbl);\r\n\r\n    int selectedOption = JOptionPane.showOptionDialog(null, panel, \"The Title\", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, options , options[1]);\r\n\r\n    return selectedOption != 1;\r\n\r\n  }\r\n\r\n  private static String tabelaAlunos(String[] turmas, int[] numeros, String[] nomes, int[] algNotas, int[] javaNotas, int[] vbNotas, int nElems){\r\n\r\n    String tabela;\r\n\r\n    tabela = \"<html> <head> <style> table { font-family: arial, sans-serif; border-collapse: collapse; width: 500px; margin-right: 0,} td, th { border: 2px solid #dddddd; text-align: left; margin-right: 0;} tr:nth-child(even) { background-color: #000000; font-weight: bold} </style> </head> <body> <table> <tr> <th>Turma</th> <th>Número</th> <th>Nome</th> <th>Alg</th> <th>Java</th> <th>VB</th> <th>Final</th> </tr>\";\r\n\r\n    for (int i = 0; i < nElems; i++) {\r\n      tabela += \"<tr> <td>\"+ turmas[i].trim() +\"</td> <td>\"+ numeros[i] +\"</td> <td>\"+ nomes[i].trim() +\"</td> <td>\"+ algNotas[i] +\"</td> <td>\"+ javaNotas[i] +\"</td> <td>\"+ vbNotas[i] +\"</td> <td>\"+ notaFinal(algNotas[i], javaNotas[i], vbNotas[i], 0.30, 0.40, 0.30) +\"</td> </tr>\";\r\n    }\r\n\r\n    tabela += \"</table> </body> </html>\";\r\n\r\n    return tabela;\r\n\r\n  }\r\n\r\n  private static int notaFinal(int algNota, int javaNota, int vbNota, double pAlg, double pJava, double pVb) {\r\n\r\n    return (int) ((algNota * pAlg) + (javaNota * pJava) + (vbNota * pVb));\r\n\r\n  }\r\n\r\n  private static int checkNumber(String input, String nome) {\r\n\r\n    int output = -1;\r\n\r\n    while (output == -1){\r\n      try {\r\n        output = Integer.parseInt(input);\r\n      }catch (NumberFormatException e){\r\n        JOptionPane.showMessageDialog(null, \"Numero inválido!\", \"Falha ao inserir numero\", JOptionPane.WARNING_MESSAGE);\r\n\r\n        input = JOptionPane.showInputDialog(null, \"Insira o numero do(a) aluno(a) \" + nome + \":\", \"\", JOptionPane.PLAIN_MESSAGE);\r\n      }\r\n    }\r\n\r\n    return output;\r\n\r\n  }\r\n\r\n  private static int checkNota(String input, String nome, String notaNome) {\r\n\r\n    int output = -1;\r\n\r\n    while (output == -1){\r\n      try {\r\n        output = Integer.parseInt(input);\r\n      }catch (NumberFormatException e){\r\n        JOptionPane.showMessageDialog(null, \"Nota inválida!\", \"Falha ao inserir nota\", JOptionPane.WARNING_MESSAGE);\r\n\r\n        input = JOptionPane.showInputDialog(null, \"Insira a nota de \"+ notaNome +\" do(a) aluno(a) \" + nome + \":\", \"\", JOptionPane.PLAIN_MESSAGE);\r\n      }\r\n\r\n      if(output < 0 || output > 20){\r\n        output = -1;\r\n\r\n        JOptionPane.showMessageDialog(null, \"Nota inválida!\", \"Falha ao inserir nota\", JOptionPane.WARNING_MESSAGE);\r\n        input = JOptionPane.showInputDialog(null, \"Insira a nota de \"+ notaNome +\" do(a) aluno(a) \" + nome + \":\", \"\", JOptionPane.PLAIN_MESSAGE);\r\n      }\r\n\r\n    }\r\n\r\n    return output;\r\n\r\n  }\r\n\r\n  private static int pesquisar(int[] numeros, int nElems, int numero) {\r\n    int pos = 0;\r\n    while (pos < nElems && numero != numeros[pos]) {\r\n      pos++;\r\n    }\r\n    if (pos < nElems) {\r\n      return pos;\r\n    } else {\r\n      return -1;\r\n    }\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Main.java b/Main.java
--- a/Main.java	(revision 95011d7b8f8c1539f42042b49f0c32f5cb31eb47)
+++ b/Main.java	(date 1645717473229)
@@ -89,17 +89,20 @@
 
     }while (nomes[nElems] == null || nomes[nElems].length() == 0);
 
-    do{
-
-      turmas[nElems] = JOptionPane.showInputDialog(null, "Insira a turma do aluno(a) "+ nomes[nElems] +":", "Inserir Aluno", JOptionPane.PLAIN_MESSAGE).toUpperCase();
+    turmas[nElems] = JOptionPane.showInputDialog(null, "Insira a turma do aluno(a) "+ nomes[nElems] +":", "Inserir Aluno", JOptionPane.PLAIN_MESSAGE).toUpperCase();
 
-      if (turmas[nElems].length() != 1){
-        JOptionPane.showMessageDialog(null, "A turma só pode ser constituida por uma letra!", "Turma inválida!", JOptionPane.WARNING_MESSAGE);
-      }
-
-    }while (turmas[nElems].length() != 1);
+    do {
 
-    numeros[nElems] = checkNumber(JOptionPane.showInputDialog(null, "Insira o numero do(a) aluno(a) " + nomes[nElems] + ":", "Inserir Aluno", JOptionPane.PLAIN_MESSAGE), nomes[nElems]);
+      numeros[nElems] = checkNumber(JOptionPane.showInputDialog(null, "Insira o numero do(a) aluno(a) " + nomes[nElems] + ":", "Inserir Aluno", JOptionPane.PLAIN_MESSAGE), nomes[nElems]);
+
+      //TODO: Check if number is already saved
+
+
+      if (checkDigits(numeros[nElems]) != 7){
+        JOptionPane.showMessageDialog(null, "Por favor introduza um numero válido!", "Numero inválido!", JOptionPane.WARNING_MESSAGE);
+      }
+
+    }while (checkDigits(numeros[nElems]) != 7);
     algNotas[nElems] = checkNota(JOptionPane.showInputDialog(null, "Insira a nota de Algoritmia do(a) aluno(a) " + nomes[nElems] + ":", "Inserir Aluno", JOptionPane.PLAIN_MESSAGE), nomes[nElems], "Algoritmia");
     javaNotas[nElems] = checkNota(JOptionPane.showInputDialog(null, "Insira a nota de Java do(a) aluno(a) " + nomes[nElems] + ":", "Inserir Aluno",JOptionPane.PLAIN_MESSAGE), nomes[nElems], "Java");
     vbNotas[nElems] = checkNota(JOptionPane.showInputDialog(null, "Insira a nota de Visual Basic do(a) aluno(a) " + nomes[nElems] + ":", "Inserir Aluno", JOptionPane.PLAIN_MESSAGE), nomes[nElems], "Visual Basic");
@@ -348,4 +351,17 @@
       return -1;
     }
   }
+
+  private static int checkDigits(int num){
+    int count = 0;
+
+    while (num != 0) {
+      // num = num/10
+      num /= 10;
+      ++count;
+    }
+
+    return count;
+
+  }
 }
Index: out/production/Trabalho-Java-Ano-Zero/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"09db4b54-9fba-4eb8-8824-e56ac9dbd353\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Main.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"25YsRuZm32wNakEnm3o5rjOEZUv\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"Trabalho-Java-Ano-Zero\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"09db4b54-9fba-4eb8-8824-e56ac9dbd353\" name=\"Changes\" comment=\"\" />\r\n      <created>1645715355394</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1645715355394</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/out/production/Trabalho-Java-Ano-Zero/.idea/workspace.xml b/out/production/Trabalho-Java-Ano-Zero/.idea/workspace.xml
--- a/out/production/Trabalho-Java-Ano-Zero/.idea/workspace.xml	(revision 95011d7b8f8c1539f42042b49f0c32f5cb31eb47)
+++ b/out/production/Trabalho-Java-Ano-Zero/.idea/workspace.xml	(date 1645717314841)
@@ -4,6 +4,7 @@
     <list default="true" id="09db4b54-9fba-4eb8-8824-e56ac9dbd353" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/Trabalho-Java-Ano-Zero/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Trabalho-Java-Ano-Zero/Main.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
